<?xml version="1.0" encoding="ISO-8859-1" ?>
<controls xmlVersion="1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../schemas/control.xsd">

<!-- 

Copyright (C) 2014 - Gareth Edwards / Rapid Information Systems

gareth.edwards@rapid-is.co.uk


This file is part of the Rapid Application Platform

RapidSOA is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version. The terms require you to include
the original copyright, and the license notice in all redistributions.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
in a file named "COPYING".  If not, see <http://www.gnu.org/licenses/>.

 -->

	<control>
	    
	    <type>pagePanel</type>	 
	    <name>Page</name>	   
	    <image>images/page_24x24.png</image>  
	    
	    <addToNewApplications>true</addToNewApplications>     
	    <noDefaultName>true</noDefaultName>
	    
	    <canUserAdd>true</canUserAdd>
	    <canUserMove>true</canUserMove>
	    
	    <properties>           
	        <property>
	            <key>pageId</key>
	            <name>Page</name>
	            <changeValueJavaScript>select</changeValueJavaScript>
	            <getValuesFunction>
	                <![CDATA[       
return "<option value=''>None</option>" + getPageOptions(this.pageId,_page.id); 	                
	                ]]>
	            </getValuesFunction>		                        
	        </property>
	    </properties>
	    <getHtmlFunction>
	        <![CDATA[
return "<div id='" + this.id + "' class='pagepanel'><center><h1>Page</h1></center></div>";
	        ]]>
	    </getHtmlFunction> 
	    
	    <rebuildJavaScript>
	        <![CDATA[
// inject the page html	
if (this.pageId) {

	var html = "";

	// request the page		
	$.ajax({
    	url: "~?a=" + _app.id + "&p=" + this.pageId,
    	type: "GET",          
        data: null,   
        async: false,         
        error: function(server, status, error) { 
        	var bodyHtml = "Error loading page : " + error; 
        },
        success: function(page) {
        	
        	// if the page can't be found a blank response is sent, so only show if we got something
        	if (page) {
        	
        		// empty the body html
        		bodyHtml = "";
        		
            	// loop the items
            	var items = $(page);
            	for (var i in items) {
            		// check for a script node
            		switch (items[i].nodeName) {
            		case "#text" : case "TITLE" : case "SCRIPT" : // ignore these types
            		break;
            		default :
            			if (items[i].outerHTML) {
            				// retain the script in our body html
            				bodyHtml += items[i].outerHTML;        				
            			}
            		break;
            		}
            	}
            	            	            	            	
        	} 
        	       	        	        	        	        		
        }
        	        	        
	});
	
	// set the html
    this.object.html("#" + this.id).html(bodyHtml);
	
} else {
	this.object.html("#" + this.id).html("<center><h1>Page</h1></center>");
}     
	         ]]>
	    </rebuildJavaScript>
	    
	    <saveJavaScript>
	        <![CDATA[
// empty the contents prior to saving	        
this.object.html("");	        
	        ]]>
	    </saveJavaScript>
	    
	    <getDetailsFunction>
	        <![CDATA[
return {appId: _app.id, pageId: this.pageId};	        
	        ]]>
	    </getDetailsFunction>
	    
	    <styles>       
	        <style>
	            <name>Page</name>  
	            <getAppliesToFunction>
					<![CDATA[	      
return "#" + this.id;
	       			 ]]>	                
	            </getAppliesToFunction>
	        </style>
	    </styles>
	    	    
	    <initJavaScript>
	        <![CDATA[

var bodyHtml = "<center><h1>Page</h1></center>";

// request the page		
$.ajax({
   	url: "~?a=" + details.appId + "&p=" + details.pageId,
   	type: "GET",          
       data: null,        
       error: function(server, status, error) { 
       	var bodyHtml = "Error loading page : " + error; 
       },
       success: function(page) {
       	
       // if the page can't be found a blank response is sent, so only show if we got something
       if (page) {
       	
       		// empty the body html
       		bodyHtml = "";
       		script = "";
       		
           	// loop the items
           	var items = $(page);
           	for (var i in items) {
           		// check for a script node
           		switch (items[i].nodeName) {
           		case "#text" : case "TITLE" : // ignore these types
           		break;
           		case "SCRIPT" :
           			if (items[i].innerHTML) {
           				script += items[i].outerHTML;
           			}
           		break;
           		default :
           			if (items[i].outerHTML) {
           				// retain the script in our body html
           				bodyHtml += items[i].outerHTML;        				
           			}
           		break;
           		}
           	}   
           	// apply the injected html
           	$("#" + id).html(bodyHtml);
           	// add script into the page (if applicable)
           	if (script) $("#" + id).append(script);
           	           	        	            	            	            
    	}        	       	        	        	        	        		
    }       	        	        
});	        
	        ]]>	        
	    </initJavaScript>
	    
	</control>
</controls>