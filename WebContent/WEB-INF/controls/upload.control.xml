<?xml version="1.0" encoding="ISO-8859-1" ?>
<controls xmlVersion="1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../schemas/control.xsd">

<!-- 

Copyright (C) 2017 - Gareth Edwards / Rapid Information Systems

gareth.edwards@rapid-is.co.uk


This file is part of the Rapid Application Platform

Rapid is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version. The terms require you to include
the original copyright, and the license notice in all redistributions.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
in a file named "COPYING".  If not, see <http://www.gnu.org/licenses/>.

 -->

	<control>
	    
	    <type>upload</type>
	    <name>Upload</name>
	    <image>images/penknife_24x24.png</image>
	    <helpHtml>Control to upload files</helpHtml>
	    	            
	    <canUserAdd>true</canUserAdd>
	    <canUserMove>true</canUserMove>
	    <canUserAddPeers>true</canUserAddPeers>
	    <canValidate>true</canValidate>
	    	    
	    <properties>
	        
	        <property>
	            <key>name</key>
	            <name>Name</name>
	            <changeValueJavaScript>text</changeValueJavaScript>
	            <helpHtml>Name that can be given to the control. Names are used to help identify controls uniquely.</helpHtml>
	        </property>
	        
	        <property>
	            <key>message</key>
	            <name>Message</name>
	            <changeValueJavaScript>text</changeValueJavaScript>
	            <refreshHtml>true</refreshHtml>
	            <helpHtml>An alternative message that can be displayed - the default is "Drop files here to upload".</helpHtml>	            
	        </property>

	        <property>
	            <key>dictCancelUpload</key>
	            <name>Cancel message</name>
	            <changeValueJavaScript>text</changeValueJavaScript>
	            <helpHtml>An alternative message that can be displayed for the cancel link instead of the default "Cancel upload"</helpHtml>	            
	        </property>
	        
	        <property>
	            <key>dictRemoveFile</key>
	            <name>Remove message</name>
	            <changeValueJavaScript>text</changeValueJavaScript>
	            <helpHtml>An alternative message that can be displayed for the remove link instead of the default "Remove file"</helpHtml>	            
	        </property>
	        
	        <property>
	            <key>acceptedFiles</key>
	            <name>Accepted files</name>
	            <changeValueJavaScript>text</changeValueJavaScript>
	            <helpHtml>A comma separated list of mime types or file extensions. Eg.: image/*,application/pdf,.psd - by default Rapid accpets .bmp, .gif, .jpg, .png, .pdf</helpHtml>
	        </property>
	        
	        <property>
	            <key>maxFiles</key>
	            <name>Max files</name>
	            <changeValueJavaScript>integer</changeValueJavaScript>
	            <helpHtml>Maximum number of files allowed to be uploaded.</helpHtml>
	        </property>
	        
	        <property>
	            <key>resizeWidth</key>
	            <name>Resize width</name>
	            <changeValueJavaScript>integer</changeValueJavaScript>
	            <helpHtml>If set, images will be resized to this width in pixels before being uploaded. If resizeHeight is not provided, the original aspect ratio of the file will be preserved.</helpHtml>
	        </property>
	        
	        <property>
	            <key>resizeHeight</key>
	            <name>Resize height</name>
	            <changeValueJavaScript>integer</changeValueJavaScript>
	            <helpHtml>If set, images will be resized to this height in pixels before being uploaded. If resizeWidth is not provided, the original aspect ratio of the file will be preserved.</helpHtml>
	        </property>
	        
	        <property>
	            <key>resizeQuality</key>
	            <name>Resize quality</name>
	            <changeValueJavaScript>integer</changeValueJavaScript>
	            <helpHtml>The quality of the resized images - a number between 0 and 100</helpHtml>
	        </property>
	        
	        <property>
	            <key>resizeMethod</key>
	            <name>Resize method</name>
	            <changeValueJavaScript>select</changeValueJavaScript>
	            <getValuesFunction>
	                 <![CDATA[
	                return [["","Please select"],["contain","contain"],["crop","crop"]];
	               	]]>
	            </getValuesFunction>
	            <helpHtml>How the images should be scaled down in case both resizeWidth and resizeHeight are provided.</helpHtml>
	        </property>
	        	 	                  	      
	    </properties>
	    
	    <resources>
	        <resource>
	            <type>javascriptFile</type>
	            <contents>scripts/controls/dropzone.js</contents>
	        </resource>
	        <resource>
	            <type>cssFile</type>
	            <contents>styles/controls/dropzone.css</contents>
	        </resource>	        
	        <resource>
	            <type>javascript</type>
	            <contents>
	                <![CDATA[
if (window["Dropzone"]) Dropzone.autoDiscover = false;
	                ]]>
	            </contents>
	        </resource>
	        <resource>
	            <type>css</type>
	            <contents>
	                <![CDATA[
            	      
	                ]]>
	            </contents>
	        </resource>
	    </resources>
	    
	    <getHtmlFunction>
	        <![CDATA[	   	        
return "<div class='upload dropzone' id='" + this.id + "'><input type='hidden' name='" + this.id + "' id='" + this.id + "files'></input></div>";
	        ]]>
	    </getHtmlFunction> 
	    
	    <initDesignJavaScript>
	        <![CDATA[
new _pageIframeWindow[0].Dropzone("div#" + this.id, { 
	url: "~",
	dictDefaultMessage: this.message
});
	        ]]>
	    </initDesignJavaScript>
	    
	    <getDetailsFunction>	        
	        <![CDATA[
return {
  message: this.message,
  dictCancelUpload: this.dictCancelUpload,
  dictRemoveFile: this.dictRemoveFile,
  acceptedFiles: this.acceptedFiles,
  maxFiles: this.maxFiles,
  resizeWidth: this.resizeWidth,
  resizeHeight: this.resizeHeight,  
  resizeQuality: this.resizeQuality / 100,
  resizeMethod: this.resizeMethod
};
			]]>	        	        
	    </getDetailsFunction>	    
	    	    
	    <getDataFunction>
	        <![CDATA[
return $("#" + id + "files").val();
	        ]]>
	    </getDataFunction>
	 
	    <styles>
	        <style>
	            <name>Upload</name>
	            <getAppliesToFunction>
					<![CDATA[
return "#" + this.id;
	       			 ]]>
	            </getAppliesToFunction>
	        </style>
	        <style>
	            <name>Images</name>
	            <getAppliesToFunction>
					<![CDATA[
return "#" + this.id + " div.dz-image";
	       			 ]]>
	            </getAppliesToFunction>
	        </style>
	        <style>
	            <name>Messages</name>
	            <getAppliesToFunction>
					<![CDATA[
return "#" + this.id + " span";
	       			 ]]>
	            </getAppliesToFunction>
	        </style>
	        <style>
	            <name>Remove link</name>
	            <getAppliesToFunction>
					<![CDATA[
return "#" + this.id + " a.dz-remove";
	       			 ]]>
	            </getAppliesToFunction>
	        </style>
	        	        
	    </styles>
	    
	   	<initJavaScript>
	        <![CDATA[
var dz = new Dropzone("div#" + id, { 
	url: "~?a=" + _appId + "&v=" + _appVersion + "&action=uploadImage", 
	addRemoveLinks: true,
	capture: "camera",
	hiddenInputContainer: "div#" + id,
	dictCancelUploadConfirmation: null,
	dictRemoveFileConfirmation: null,
	dictDefaultMessage: details.message,
	dictCancelUpload: details.dictCancelUpload,
	dictRemoveFile: details.dictRemoveFile,
	acceptedFiles: (details.acceptedFiles ? acceptedFiles : "image/bmp,image/gif,image/jpeg,image/png,application/pdf"),	 
	maxFiles: details.maxFiles,
	resizeWidth: details.resizeWidth,
	resizeHeight: details.resizeHeight,  
	resizeQuality: details.resizeQuality,
	resizeMethod: details.resizeMethod
});
dz.on("success", function(file) {
    var i = $("#" + id + "files");
    var files = i.val();
    if (files) {
    	files += ",";
    } else {
    	files = "";
    }
    if (file.xhr && file.xhr.response) {
    	files += file.xhr.response;
    } else {
    	files += file.name;
    }
    i.val(files);
});
dz.on("removedfile", function(file) {
    var i = $("#" + id + "files");
    var files = i.val();
    if (files) 	files = files.replace(",,","").replace(file.name,"");
    i.val(files);
});
	        ]]>
	    </initJavaScript>
	    
	</control>
</controls>