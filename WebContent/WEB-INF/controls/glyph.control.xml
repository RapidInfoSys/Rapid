<?xml version="1.0" encoding="UTF-8" ?>
<controls xmlVersion="1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../schemas/control.xsd">

<!-- 

Copyright (C) 2019 - Gareth Edwards / Rapid Information Systems

gareth.edwards@rapid-is.co.uk


This file is part of the Rapid Application Platform

Rapid is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version. The terms require you to include
the original copyright, and the license notice in all redistributions.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
in a file named "COPYING".  If not, see <http://www.gnu.org/licenses/>.

 -->

    <control>
        
        <type>glyph</type>
        <name>Glyph</name>
        <image>images/glyph.svg</image>
        <helpHtml>Displays an icon or symbol.</helpHtml>
        
        <addToNewApplications>true</addToNewApplications>
        <noDefaultName>true</noDefaultName>
        
	    <canUserAdd>true</canUserAdd>
	    <canUserMove>true</canUserMove>
	    <canUserAddPeers>true</canUserAddPeers>
	    
	    <properties>
	        
	        <property>
	            <key>name</key>
	            <name>Name</name>
	            <changeValueJavaScript>text</changeValueJavaScript>
	            <helpHtml>Name that can be given to the control. Names are used to help identify controls uniquely.</helpHtml>
	        </property>
	                    
	        <property>
	            <key>code</key>
	            <name>Glyph</name>
	            <setConstructValueFunction>
	                <![CDATA[
	                return "f042"
	                ]]>
	            </setConstructValueFunction>
	            <changeValueJavaScript>glyphCode</changeValueJavaScript>
	            <refreshHtml>true</refreshHtml>
	            <refreshProperties>true</refreshProperties>
	            <helpHtml>Sets the glyph to appear from a library of different images.</helpHtml>
	        </property>
	           
	        <property>
	            <key>background</key>
	            <name>Background</name>
	            <setConstructValueFunction>return "none";</setConstructValueFunction>
	            <changeValueJavaScript>GlyphBackground</changeValueJavaScript>
	            <getValuesFunction>
	                <![CDATA[
return ["none","circle","circle-o","square","square-o"];
					]]>
	            </getValuesFunction>
	            <refreshHtml>true</refreshHtml>
	            <helpHtml>Applies an additional style to the glyph.</helpHtml>
	        </property>
	        
	        <property>
	            <key>title</key>
	            <name>Title</name>
	            <setConstructValueFunction>
	                <![CDATA[
	                return "";
	                ]]>
	            </setConstructValueFunction>
	            <changeValueJavaScript>text</changeValueJavaScript>
	            <refreshHtml>true</refreshHtml>
	            <helpHtml>A title that shows a hint when mousing over over the glyph.</helpHtml>
	        </property>
	        
	        <property>
	            <key>spin</key>
	            <name>Spin</name>
	            <changeValueJavaScript>checkbox</changeValueJavaScript>
	            <refreshHtml>true</refreshHtml>
	            <helpHtml>Sets the glyph spinning clockwise. Useful for showing something as loading or sending.</helpHtml>
	        </property>
	        
	    </properties>
	    
	    <resources>
	         <resource>
	            <type>cssFile</type>
	            <contents>styles/fonts/rapid/font-rapid.css</contents>
	        </resource>
	        <resource>
	            <type>cssFile</type>
	            <contents>styles/fonts/fontawesome/css/font-awesome.css</contents>
	        </resource>
	        <resource>
	            <type>file</type>
	            <contents>styles/fonts/fontawesome/fonts/fa-brands-400.eot</contents>
	        </resource>
	        <resource>
	            <type>file</type>
	            <contents>styles/fonts/fontawesome/fonts/fa-brands-400.svg</contents>
	        </resource>
	        <resource>
	            <type>file</type>
	            <contents>styles/fonts/fontawesome/fonts/fa-brands-400.ttf</contents>
	        </resource>
	        <resource>
	            <type>file</type>
	            <contents>styles/fonts/fontawesome/fonts/fa-brands-400.woff</contents>
	        </resource>
	        <resource>
	            <type>file</type>
	            <contents>styles/fonts/fontawesome/fonts/fa-brands-400.woff2</contents>
	        </resource>
	        <resource>
	            <type>file</type>
	            <contents>styles/fonts/fontawesome/fonts/fa-regular-400.eot</contents>
	        </resource>
	        <resource>
	            <type>file</type>
	            <contents>styles/fonts/fontawesome/fonts/fa-regular-400.svg</contents>
	        </resource>
	        <resource>
	            <type>file</type>
	            <contents>styles/fonts/fontawesome/fonts/fa-regular-400.ttf</contents>
	        </resource>
	        <resource>
	            <type>file</type>
	            <contents>styles/fonts/fontawesome/fonts/fa-regular-400.woff</contents>
	        </resource>
	        <resource>
	            <type>file</type>
	            <contents>styles/fonts/fontawesome/fonts/fa-regular-400.woff2</contents>
	        </resource>
	        <resource>
	            <type>file</type>
	            <contents>styles/fonts/fontawesome/fonts/fa-solid-900.eot</contents>
	        </resource>
	        <resource>
	            <type>file</type>
	            <contents>styles/fonts/fontawesome/fonts/fa-solid-900.svg</contents>
	        </resource>
	        <resource>
	            <type>file</type>
	            <contents>styles/fonts/fontawesome/fonts/fa-solid-900.ttf</contents>
	        </resource>
	        <resource>
	            <type>file</type>
	            <contents>styles/fonts/fontawesome/fonts/fa-solid-900.woff</contents>
	        </resource>
	        <resource>
	            <type>file</type>
	            <contents>styles/fonts/fontawesome/fonts/fa-solid-900.woff2</contents>
	        </resource>
	         <resource>
	            <type>file</type>
	            <contents>styles/fonts/rapid/rapid.ttf</contents>
	        </resource>
	        <resource>
	            <type>file</type>
	            <contents>styles/fonts/rapid/rapid.woff</contents>
	        </resource>
	    </resources>
	    
	    <getHtmlFunction>
	        <![CDATA[
// return the html for adding to our parent object
var glyph = newGlyph(this.code);

var glyphHtml = "<span id='" + this.id + "' class='glyph " + glyph.class + (this.spin ? " fa-spin" : "") + getStyleClasses(this) + "'" + (this.title ? " title='" + this.title + "'" : "") + ">" + glyph.html + "</span>";

if (this.background && this.background != "none") {
	var backgroundGlyph = newGlyph({"circle":"s.f111","circle-o":"r.f111","square":"s.f0c8","square-o":"r.f0c8"}[this.background]);
	glyphHtml = "<span id='" + this.id + "' class='fa-stack fa-lg glyphWithBackground glyph'><i class='" + backgroundGlyph.class + " fa-stack-2x glyphBackground'>" + backgroundGlyph.html + "</i><i class='" + glyph.class + " fa-stack-1x'>" + glyph.html + "</i></span>";
}

return glyphHtml;
	        ]]>
	    </getHtmlFunction>  
	    
	    <events>
	        <event>
	            <type>click</type>
	            <name>Click</name>
	        </event>
	        <event>
	            <type>mouseover</type>
	            <name>Mouse over</name>
	        </event>
	        <event>
	            <type>mouseout</type>
	            <name>Mouse out</name>
	        </event>	        
	    </events> 
	    
	    <styles>
	        <style>
	            <name>Glyph</name>
	            <getAppliesToFunction>
					<![CDATA[	      
return "#" + this.id;
	       			 ]]>	                
	            </getAppliesToFunction>
	        </style>
	        <style>
	            <name>Glyph background</name>  
	            <getAppliesToFunction>
					<![CDATA[	      
return "#" + this.id + " .glyphBackground";
	       			 ]]>	                
	            </getAppliesToFunction>
	        </style>
	    </styles>
	    
    </control> 
</controls>