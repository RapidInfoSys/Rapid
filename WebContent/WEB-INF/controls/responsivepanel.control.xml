<?xml version="1.0" encoding="UTF-8" ?>
<controls xmlVersion="1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../schemas/control.xsd">

<!-- 

Copyright (C) 2018 - Gareth Edwards / Rapid Information Systems

gareth.edwards@rapid-is.co.uk


This file is part of the Rapid Application Platform

Rapid is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version. The terms require you to include
the original copyright, and the license notice in all redistributions.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
in a file named "COPYING".  If not, see <http://www.gnu.org/licenses/>.

 -->

	<control>
	    
	    <type>responsivepanel</type>
	    <name>Responsive panel</name>
	    <image>images/responsivepanel_24x24.png</image>
	    <category>Responsive controls</category>
	    <helpHtml>A control that groups other controls together into a box. It resizes with screen-width and moves down if it gets too small.</helpHtml>
	    
	    <addToNewResponsiveApplications>true</addToNewResponsiveApplications>
	    
	    <noDefaultName>true</noDefaultName>
	    
	    <canUserAdd>true</canUserAdd>
	    <canUserMove>true</canUserMove>
	    <canUserInsert>true</canUserInsert>
	    <canUserAddPeers>true</canUserAddPeers>
	    
	    <properties>
	            
	        <property>
	            <key>name</key>
	            <name>Name</name>
	            <changeValueJavaScript>text</changeValueJavaScript>
	            <helpHtml>Name that can be given to the control. Names are used to help identify controls uniquely.</helpHtml>
	        </property>
	        
	        <property>
	            <key>text</key>
	            <name>Text</name>
	            <setConstructValueFunction>return ""</setConstructValueFunction>
	            <changeValueJavaScript>bigtext</changeValueJavaScript>
	            <refreshHtml>true</refreshHtml>
	            <helpHtml>Inputs text into the panel.</helpHtml>
	        </property>
	             
	        <property>
	            <key>roles</key>
	            <name>User roles</name>
	            <changeValueJavaScript>roles</changeValueJavaScript>
	            <helpHtml>Only allows the viewing of the panel based on the type of privileges a user has.</helpHtml>
	        </property>
	        
	        <property>
	            <key>hidden</key>
	            <name>Hidden</name>
	            <changeValueJavaScript>checkbox</changeValueJavaScript>
	            <helpHtml>Tick this to have the panel hidden when the page first loads.</helpHtml>
	        </property>
	        
	         <property>
	            <key>extraSmall</key>
	            <name>Extra small width</name>
	            <setConstructValueFunction>return "xs-12"</setConstructValueFunction>
	            <changeValueJavaScript>select</changeValueJavaScript>
	            <getValuesFunction>
	                <![CDATA[
return [{value:"", text:"Please select..."}, {value:"hidden-xs", text:"hidden"}, {value:"xs-1", text:"1/12"}, {value:"xs-2", text:"2/12s"}, {value:"xs-3", text:"3/12s"}, {value:"xs-4", text:"4/12s"}, {value:"xs-5", text:"5/12s"}, {value:"xs-6", text:"6/12s"}, {value:"xs-7", text:"7/12s"}, {value:"xs-8", text:"8/12s"}, {value:"xs-9", text:"9/12s"}, {value:"xs-10", text:"10/12s"}, {value:"xs-11", text:"11/12s"}, {value:"xs-12", text:"12/12s"}];
					]]>
	            </getValuesFunction>
	            <refreshHtml>true</refreshHtml>
	            <helpHtml>Sets the width of the panel when the screen size is very small. Pages are broken into grids 12 columns wide.</helpHtml>
	        </property>
	        
	        <property>
	            <key>small</key>
	            <name>Small width</name>
	            <setConstructValueFunction>return "";</setConstructValueFunction>
	            <changeValueJavaScript>select</changeValueJavaScript>
	            <getValuesFunction>
	                <![CDATA[
return [{value:"", text:"Please select..."}, {value:"hidden-sm", text:"hidden"}, {value:"sm-1", text:"1/12"}, {value:"sm-2", text:"2/12s"}, {value:"sm-3", text:"3/12s"}, {value:"sm-4", text:"4/12s"}, {value:"sm-5", text:"5/12s"}, {value:"sm-6", text:"6/12s"}, {value:"sm-7", text:"7/12s"}, {value:"sm-8", text:"8/12s"}, {value:"sm-9", text:"9/12s"}, {value:"sm-10", text:"10/12s"}, {value:"sm-11", text:"11/12s"}, {value:"sm-12", text:"12/12s"}];
					]]>
	            </getValuesFunction>
	            <refreshHtml>true</refreshHtml>
	            <helpHtml>Sets the width of the panel when the screen size is small. Pages are broken into grids 12 columns wide.</helpHtml>
	        </property>
	        
	        <property>
	            <key>medium</key>
	            <name>Medium width</name>
	            <setConstructValueFunction>return "";</setConstructValueFunction>
	            <changeValueJavaScript>select</changeValueJavaScript>
	            <getValuesFunction>
	                <![CDATA[
return [{value:"", text:"Please select..."}, {value:"hidden-md", text:"hidden"}, {value:"md-1", text:"1/12"}, {value:"md-2", text:"2/12s"}, {value:"md-3", text:"3/12s"}, {value:"md-4", text:"4/12s"}, {value:"md-5", text:"5/12s"}, {value:"md-6", text:"6/12s"}, {value:"md-7", text:"7/12s"}, {value:"md-8", text:"8/12s"}, {value:"md-9", text:"9/12s"}, {value:"md-10", text:"10/12s"}, {value:"md-11", text:"11/12s"}, {value:"md-12", text:"12/12s"}];
					]]>
	            </getValuesFunction>
	            <refreshHtml>true</refreshHtml>
	            <helpHtml>Sets the width of the panel when the screen size is of a medium size. Pages are broken into grids 12 columns wide.</helpHtml>
	        </property>
	        
	        <property>
	            <key>large</key>
	            <name>Large width</name>
	            <setConstructValueFunction>return "";</setConstructValueFunction>
	            <changeValueJavaScript>select</changeValueJavaScript>
	            <getValuesFunction>
	                <![CDATA[
return [{value:"", text:"Please select..."}, {value:"hidden-lg", text:"hidden"}, {value:"lg-1", text:"1/12"}, {value:"lg-2", text:"2/12s"}, {value:"lg-3", text:"3/12s"}, {value:"lg-4", text:"4/12s"}, {value:"lg-5", text:"5/12s"}, {value:"lg-6", text:"6/12s"}, {value:"lg-7", text:"7/12s"}, {value:"lg-8", text:"8/12s"}, {value:"lg-9", text:"9/12s"}, {value:"lg-10", text:"10/12s"}, {value:"lg-11", text:"11/12s"}, {value:"lg-12", text:"12/12s"}];
					]]>
	            </getValuesFunction>
	            <refreshHtml>true</refreshHtml>
	            <helpHtml>Sets the width of the panel when the screen size is large. Pages are broken into grids 12 columns wide.</helpHtml>
	        </property>
	        
	    </properties>
	    
	    <resources>
			<resource>
				<type>cssLink</type>
				<contents>styles/bootstrap.css</contents>
			</resource>

			<resource>
				<type>javascriptLink</type>
				<contents>scripts_min/bootstrap.min.js</contents>
			</resource>
		</resources>
	    
	    <getHtmlFunction>
	        <![CDATA[
// get the style classes for this control
classes = getStyleClasses(this);

// add appropriate col width classes if they are specified - hidden does not take the col- prefix
if (this.extraSmall) classes += (this.extraSmall.indexOf("hidden") == 0 ? " " : " col-") + this.extraSmall;
if (this.small) classes += (this.small.indexOf("hidden") == 0 ? " " : " col-") + this.small;
if (this.medium) classes += (this.medium.indexOf("hidden") == 0 ? " " : " col-") + this.medium;
if (this.large) classes += (this.large.indexOf("hidden") == 0 ? " " : " col-") + this.large;

// return our html for adding to our parent object
return "<div id='" + this.id + "' class='r-panel" + classes + "'" + (this.text ? "" : " style='min-height:15px;'") + ">" + this.text + "</div>";
	        ]]>
	    </getHtmlFunction>
	    
	    <saveJavaScript>
	        <![CDATA[
// get the style attribute 	        
var style = this.object.attr("style");
// if the min-height:15 is present but there are children
if (style && style.indexOf("min-height:15px;") > -1 && this.childControls && this.childControls.length > 0) {
	// remove the min-height
	style = style.replace("min-height:15px;","");
	// if there are other attributes
	if (style) {
		// update changed style
		this.object.attr("style",style );
	} else {
		// remove empty style
		this.object.removeAttr("style");
	}
}
// hide if hidden
if (this.hidden) this.object.hide();
	        ]]>
	    </saveJavaScript>
	    
	    <events>
	        <event>
	            <type>mouseover</type>
	            <name>Mouse over</name>
	        </event>
	        <event>
	            <type>mouseout</type>
	            <name>Mouse out</name>
	        </event>
	        <event>
	            <type>click</type>
	            <name>Click</name>
	        </event>	        
	    </events>
	    
	    <styles>       
	        <style>
	            <name>Responsive panel</name>  
	            <getAppliesToFunction>
					<![CDATA[	      
return "#" + this.id;
	       			 ]]>	                
	            </getAppliesToFunction>
	        </style>
	    </styles>
	    
	</control>
</controls>