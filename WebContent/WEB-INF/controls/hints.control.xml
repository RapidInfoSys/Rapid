<?xml version="1.0" encoding="UTF-8" ?>
<controls xmlVersion="1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../schemas/control.xsd">

<!-- 

Copyright (C) 2018 - Gareth Edwards / Rapid Information Systems

gareth.edwards@rapid-is.co.uk


This file is part of the Rapid Application Platform

Rapid is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version. The terms require you to include
the original copyright, and the license notice in all redistributions.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
in a file named "COPYING".  If not, see <http://www.gnu.org/licenses/>.

 -->

	<control>
	    
	    <type>hints</type>
	    <name>Hints</name>
	    <image>images/hint_24x24.png</image>
	    <helpHtml>An invisible control that stores the text to be shown when the user hovers over other controls.</helpHtml>
	      
	    <noDefaultName>true</noDefaultName>
	    
	    <canUserAdd>true</canUserAdd>
	    <canUserAddPeers>true</canUserAddPeers>
	    
	    <properties>
	        
	        <property>
	            <key>name</key>
	            <name>Name</name>
	            <changeValueJavaScript>text</changeValueJavaScript>
	            <helpHtml>Name that can be given to the control. Names are used to help identify controls uniquely.</helpHtml>
	        </property>
	               
	        <property>
	            <key>controlHints</key>
	            <name>Hints</name>
	            <changeValueJavaScript>controlHints</changeValueJavaScript>
	            <refreshProperties>true</refreshProperties>
	            <helpHtml>Sets the information for each hint and assigns them to a control on the page. Each hint can be styled individually and can alter between click and hover actions.</helpHtml>
	        </property>
	            
	    </properties>
	    
	    <resources>
	        <resource>
	            <type>css</type>
	            <contents>
	                <![CDATA[	                
.hint {
	position: absolute;
	z-index: 10102;
}                
	                ]]>
				</contents>
	        </resource>
	        <resource>
	            <type>javascript</type>
	            <contents>
	                <![CDATA[       
function addControlHint(id, style, type, text) {

	if (id) {

		if (!$("#" + id + "hint")[0]) {
		
			if (style) {
				style = " style='" + style + "'";
			} else {
				style = "";
			}
			
			$("body").append("<span class='hint' id='" + id + "hint'" + style + ">" + text + "</span>");
			
			$("#" + id + "hint").hide();
			
		}
			
		$("#" + id).mouseout(id, function(ev) {
			$("#" + ev.data + "hint").hide();
		});
			
		switch (type) {		
			case "click" :
				$("#" + id).click(id, function(ev) { 
					var hint = $("#" + ev.data + "hint");
					hint.show();
					var left = ev.pageX + 5;
					var top = ev.pageY + 5;
					if (ev.pageX + 5 + hint.outerWidth(true) > $(window).width()) left = ev.pageX - hint.outerWidth(true) - 5;
					if (ev.pageY + 5 + hint.outerHeight(true) > $(window).height()) top = ev.pageY - hint.outerHeight(true) - 5;
					hint.css({
						left: left,
						top: top
					}); 
				});
				break;
			case "hover" :
				$("#" + id).mouseover(id, function(ev) { 
					var hint = $("#" + ev.data + "hint");
					hint.show();
					var left = ev.pageX + 5;
					var top = ev.pageY + 5;
					if (ev.pageX + 5 + hint.outerWidth(true) > $(window).width()) left = ev.pageX - hint.outerWidth(true) - 5;
					if (ev.pageY + 5 + hint.outerHeight(true) > $(window).height()) top = ev.pageY - hint.outerHeight(true) - 5;
					hint.css({
						left: left,
						top: top
					});  
				});
			break;
		}
		
	}
	
}           
	                ]]>
				</contents>
	        </resource>
	    </resources>
	    
	    <getHtmlFunction>
	        <![CDATA[	  
// return our html 
return "<img id='" + this.id + "' class='nonVisibleControl' src='images/hint_24x24.png'></img>"
	        ]]>
	    </getHtmlFunction> 
	    	   	    
	    <saveJavaScript>
	        <![CDATA[
this.object.remove();     
	        ]]>	        	        
	    </saveJavaScript>
	    
	    <getDetailsFunction>	        
	        <![CDATA[
return { controlHints: this.controlHints };
			]]>	        	        
	    </getDetailsFunction>
	    	 
	    <styles>
	        <style>
	            <name>Hints</name>  
	            <getAppliesToFunction>
					<![CDATA[	      
return ".hint";
	       			 ]]>	                
	            </getAppliesToFunction>
	        </style>
	    </styles>
	    
	    <initJavaScript>
	    	<![CDATA[	    	    	
for (var i in details.controlHints) {
	var controlHint = details.controlHints[i];	
	addControlHint(controlHint.controlId, controlHint.style, controlHint.type, controlHint.text);	
}   	
	    	]]>
	    </initJavaScript>
	    
	</control>
</controls>