<?xml version="1.0" encoding="ISO-8859-1" ?>
<controls xmlVersion="1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../schemas/control.xsd">

<!-- 

Copyright (C) 2014 - Gareth Edwards / Rapid Information Systems

gareth.edwards@rapid-is.co.uk


This file is part of the Rapid Application Platform

RapidSOA is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version. The terms require you to include
the original copyright, and the license notice in all redistributions.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
in a file named "COPYING".  If not, see <http://www.gnu.org/licenses/>.

 -->

	<control>
	    
	    <type>gallery</type>	
	    <name>Gallery</name>	   
	    <image>images/gallery_24x24.png</image>
	    	            
	    <canUserAdd>true</canUserAdd>
	    <canUserMove>true</canUserMove>
	    <canUserAddPeers>true</canUserAddPeers>
	    	    
	    <properties>
	        <property>
	            <key>name</key>
	            <name>Name</name>
	            <changeValueJavaScript>text</changeValueJavaScript>	            
	        </property>	            
	        <property>
	            <key>images</key>
	            <name>Images</name>
	            <setConstructValueFunction>return [{url:'images/RapidLogo_60x40.png'},{url:'images/RapidLogo_60x40.png'}]</setConstructValueFunction>  
	            <changeValueJavaScript>galleryImages</changeValueJavaScript>	     	                 
	        </property>
	        <property>
	            <key>emptyText</key>
	            <name>Empty text</name>
	            <setConstructValueFunction>return "No images";</setConstructValueFunction>  
	            <changeValueJavaScript>text</changeValueJavaScript>	     	                 
	        </property>
	    </properties>
	    
	    <resources>
	        <resource>
	            <type>javascript</type>
	            <contents>
	                <![CDATA[
	                
function Gallery_removeImage(ev, id) {
	// confirm
	if (confirm("Remove image?")) {
		// get the image
		var img = $(ev.target);
		// tell Rapid Mobile an image has been removed
		if (typeof _rapidmobile != "undefined") _rapidmobile.removeImage(id, img.attr("src")); 
		// remove it
		img.remove();
		// look for our custom imageRemoved handler for this control
		var imageRemoved = window["Event_imageRemoved_" + id];
		// fire it if we found it
		if (imageRemoved) window["Event_imageRemoved_" + id]();
	}
}              	

	                ]]>
	            </contents>
	        </resource>
	    </resources>
	    
	    <getHtmlFunction>
	        <![CDATA[	   	        
var html = "<div id='" + this.id + "'>";
if (this.images && this.images.length > 0) {
  for (var i in this.images) {
    html += "<img src='" + this.images[i].url + "'/>";    
  }
} else {
	html += "<span>" + this.emptyText + "</span>";
}
html += "</div>";
return html;
	        ]]>
	    </getHtmlFunction> 
	    	    	    
	    <updateChildObjects>true</updateChildObjects>
	    	    	    
	    <getDataFunction>
	        <![CDATA[
var data = {fields:["url"],rows:[]};
var control = $("#" + id);
var images = control.children("img");
images.each( function(i) {
	var url = $(this).attr("src");
	data.rows.push([url]);
});
return data;
			]]>
	    </getDataFunction>
	    
	    <setDataJavaScript>
	        <![CDATA[       
if (data != null && data !== undefined) {
	var control = $("#" + id);
	data = makeDataObject(data, field);
	if (data.rows) {	
		// remove the no pictures message
		control.find("span").remove();
		// look for url or urls in the fields or use the first column if not found	
		var urlIndex = 0;
		if (data.fields) {
			for (var i in data.fields) {
				if (data.fields[i] == "url" || data.fields[i] == "urls") {
					urlIndex = i;
					break;
				}
			}
		}			
		// loop the rows
		for (var i in data.rows) {
			// allow comma seperated list of urls in single field too
			var urls = data.rows[i][urlIndex].split(",");
			// loop the urls
			for (var j in urls) {
				var url = urls[j];
				control.append("<img src='" + url  + "'></img>");
				control.find("img").last().click( function(ev) {
					Gallery_removeImage(ev, id);				
				});
				// look for our custom imageAddedEvent handler for this control
				var imageAdded = window["Event_imageAdded_" + id];
				// fire it if we found it
				if (imageAdded) window["Event_imageAdded_" + id]();
			}			
		}
	} 
}
	        ]]>
	    </setDataJavaScript>
	    
	    <events>
	        <event>
	            <type>imageAdded</type>
	            <name>Imaged added</name>
	        </event>
	        <event>
	            <type>imageRemoved</type>
	            <name>Image removed</name>
	        </event>
	    </events>
	    
	    <styles>
	        <style>
	            <name>Gallery</name>  
	            <getAppliesToFunction>
					<![CDATA[	      
return "#" + this.id;
	       			 ]]>	                
	            </getAppliesToFunction>
	        </style>
	        <style>
	            <name>Images</name>  
	            <getAppliesToFunction>
					<![CDATA[	      
return "#" + this.id + " img";
	       			 ]]>	                
	            </getAppliesToFunction>
	        </style>
	    </styles>
	    
	   	<initJavaScript>
	        <![CDATA[
$("#" + id).children("img").click( function(ev) {
	Gallery_removeImage(ev, id);
});	        
	        ]]>	        	       	        
	    </initJavaScript>
	    
	   	<runtimeProperties>
	   	    <runtimeProperty>
	   	        <type>imageCount</type>
	   	        <name>Image count</name>
	   	        <getPropertyFunction>
			        <![CDATA[
return ($("#" + id).children("img").size());     
			        ]]>	  	   	            
	   	        </getPropertyFunction>
	   	    </runtimeProperty>
	   	    <runtimeProperty>
	   	        <type>urls</type>
	   	        <name>Urls</name>
	   	        <getPropertyFunction>
			        <![CDATA[
var urls = "";
var control = $("#" + id);
var images = control.children("img");
images.each( function(i) {
	var url = $(this).attr("src");
	if (url) {
		urls += url.replace("http://cache/","");
		if (i < images.length - 1) urls += ",";
	}
});
if (urls) {
	return urls;
} else {
	return null;
}    
			        ]]>	  	   	            
	   	        </getPropertyFunction>
	   	    </runtimeProperty>
	   	</runtimeProperties>
	    	    
	</control>
</controls>