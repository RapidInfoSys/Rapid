<?xml version="1.0" encoding="UTF-8" ?>
<controls xmlVersion="1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../schemas/control.xsd">

<!-- 

Copyright (C) 2018 - Gareth Edwards / Rapid Information Systems

gareth.edwards@rapid-is.co.uk


This file is part of the Rapid Application Platform

Rapid is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version. The terms require you to include
the original copyright, and the license notice in all redistributions.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
in a file named "COPYING".  If not, see <http://www.gnu.org/licenses/>.

 -->

	<control>
	    
	    <type>calendar</type>
	    <name>Calendar</name>
	    <image>images/calendar.svg</image>
	    <helpHtml>Displays and lets the users select a date from a month view.</helpHtml>
	    
	    <addToNewApplications>false</addToNewApplications>
	         
	    <canUserAdd>true</canUserAdd>
	    <canUserMove>true</canUserMove>
	    <canUserAddPeers>true</canUserAddPeers>
	    <canBeUsedForFormPageVisibilty>true</canBeUsedForFormPageVisibilty>
	    <canValidate>true</canValidate>
	    
	    <properties>
	        
	        <property>
	            <key>name</key>
	            <name>Name</name>
	            <changeValueJavaScript>text</changeValueJavaScript>
	            <helpHtml>Name that can be given to the control. Names are used to help identify controls uniquely.</helpHtml>
	        </property>
	                   	        	        
	        <property>
	            <key>dateFormat</key>
	            <name>Date format</name>
	            <setConstructValueFunction>
switch (_localDateFormat) {
	case "MM/dd/yyyy": return "m/d/Y";
	case "yyyy-MM-dd": return "Y-m-d";
}
return "d/m/Y";
	            </setConstructValueFunction>	            
	            <changeValueJavaScript>select</changeValueJavaScript>
	            <getValuesFunction>
	                <![CDATA[
return [["d/m/Y","dd/mm/yyyy"],["m/d/Y","mm/dd/yyyy"],["Y-m-d","yyyy-mm-dd"]];
					]]>
	            </getValuesFunction>
	            <refreshHtml>true</refreshHtml>
	            <helpHtml>Sets the date format. Useful for other regions.</helpHtml>
	        </property>
	        
			<property>
	            <key>date</key>
	            <name>Date</name>
	            <changeValueJavaScript>text</changeValueJavaScript>
	            <refreshHtml>true</refreshHtml>
	            <helpHtml>Allows you to have a set date that is already selected.</helpHtml>
	        </property>
	        
			<property>
	            <key>selectToday</key>
	            <name>Select today</name>
	            <setConstructValueFunction>return true;</setConstructValueFunction>
	            <changeValueJavaScript>checkbox</changeValueJavaScript>
	            <refreshHtml>true</refreshHtml>
	            <helpHtml>Automatically updates to select today's date. Overrides the date above.</helpHtml>
	        </property>
	        
			<property>
	            <key>showYearChange</key>
	            <name>Show year change</name>
	            <setConstructValueFunction>return true;</setConstructValueFunction>
	            <changeValueJavaScript>checkbox</changeValueJavaScript>
	            <refreshHtml>true</refreshHtml>
	            <helpHtml>Sets whether users can jump the date in yearly increments.</helpHtml>
	        </property>
	        
	    </properties>
	    
	    <resources>
	        <resource>
	            <type>cssFile</type>
	            <contents>styles/fonts/fontawesome/css/font-awesome.css</contents>
	        </resource>
	        <!-- Some browsers choose the tff instead of the woff so both are included -->
	        <resource>
	            <type>file</type>
	            <contents>styles/fonts/fontawesome/fonts/fontawesome-webfont.woff</contents>
	        </resource>
	        <resource>
	            <type>file</type>
	            <contents>styles/fonts/fontawesome/fonts/fontawesome-webfont.ttf</contents>
	        </resource>
	        <resource>
	            <type>cssFile</type>
	            <contents>styles/controls/calendar.css</contents>
	            <replaceMinIfDifferent>true</replaceMinIfDifferent>
	        </resource>
	        <resource>
	            <type>javascriptFile</type>
	            <contents>scripts/controls/calendar.js</contents>
	            <replaceMinIfDifferent>true</replaceMinIfDifferent>
	        </resource>
	    </resources>
	    	    	    
	    <getHtmlFunction>
	        <![CDATA[	  
var html = '<div id="' + this.id + '" class="calendar"></div>';    
return html;
	        ]]>
	    </getHtmlFunction> 
	    	    	    
	    <rebuildJavaScript>
	        <![CDATA[
var id = this.id;
var details = this.details;	        
var date = null;
var today = new Date();
if (details) {
	if (details.date && details.dateFormat) {
		try {
			date = _pageIframeWindow[0].cal_f_tcalParseDate(details.date, details.dateFormat);
		} catch (ex) {
			// alert(ex);
		}
	}
	if (details.selectToday) date = today;
}

var html = '<div class="calendarHeader">';
html += '<span class="fas calendarBack calendarMonthChange" href="#" title="Back one month" onclick="calendarMove(this,\'m\',-1);">&#xf104;</span>';
if (this.showYearChange) html += '<span class="fas calendarBack calendarYearChange" href="#" title="Back one year" onclick="calendarMove(this,\'y\',-1);">&#xf100;</span>';				
html += '<span class="fas calendarForward calendarMonthChange" href="#" title="Forward one month" onclick="calendarMove(this,\'m\',1);">&#xf105;</span>';
if (this.showYearChange) html += '<span class="fas calendarForward calendarYearChange" href="#" title="Forward one year" onclick="calendarMove(this,\'y\',1);">&#xf101;</span>';			
html += '<div class="calendarLabel"></div>';
html += '</div><table class="calendarTable"><thead><tr>';
for (var i = 0; i < 7; i++) {
	html += "<td>" + _pageIframeWindow[0]._calendarWeeks[i] + "</td>";
}
html += '</thead><tbody>';
for (var i = 0; i < 6; i++) {
	html += "<tr>";
	for (var j = 0; j < 7; j++) {
		html += "<td onclick='calendarSelectDay(this);'></td>";				
	}
	html += "</tr>";
}
html += '</tbody></table>';       

if (_pageIframe && _pageIframe[0]) {

	var calendar = $(_pageIframe[0].contentDocument).find("#" + this.id);
	calendar.html(html);	
	
	if (date) {	
		calendar.attr("data-year", date.getFullYear());
		calendar.attr("data-month", date.getMonth());	
	} else {
		calendar.attr("data-year", today.getFullYear());
		calendar.attr("data-month", today.getMonth());
	}
	
	_pageIframeWindow[0].calendarSetDate(id, date);
	_pageIframeWindow[0].calendarUpdate(id);

} 

	        ]]>
	    </rebuildJavaScript>
	    
	    <getDetailsFunction>
	        <![CDATA[
return {date: this.date, dateFormat: this.dateFormat, selectToday: this.selectToday};	        
	        ]]>	        
	    </getDetailsFunction>
	    
	    <getDataFunction>
	        <![CDATA[
var calendar = $("#" + id);
var dateString = calendar.attr("data-date");
if (dateString) {
	var date = new Date(dateString);
	return cal_f_tcalGenerateDate(date, details.dateFormat);
} else {
	return null;
}	        
	        ]]>
	    </getDataFunction>
	    
	    <setDataJavaScript>
	        <![CDATA[
var calendar = $("#" + id);
var date = null;
var dateData = makeDataObject(data,field);
if (dateData) {
	if (dateData.rows && dateData.rows.length > 0) {
		var dateString = dateData.rows[0][0];
		if (dateData.fields && dateData.fields.length >0 && field) {
			for (var i in date = dateData.fields) {
				var dataField = dateData.fields[i];
				if (dataField && dataField.toLowerCase() == field.toLowerCase()) {
					dateString = dateData.rows[0][i];
					break;
				}
			}
		}		
		date = cal_f_tcalParseDate(dateString, details.dateFormat);
	}
}
if (date) {
	calendar.attr("data-date",date.getFullYear() + "-" + (date.getMonth() + 1) + "-" + date.getDate());
	calendar.attr("data-year",date.getFullYear());
	calendar.attr("data-month",date.getMonth());
} else {
	calendar.removeAttr("data-date");
}	

calendarUpdate(id);        
	        ]]>
	    </setDataJavaScript>
	    	    	    	    
	    <events>
	        <event>
	            <type>selectDay</type>
	            <name>Select day</name>
	        </event>
	    </events>
	    
	    	    
	    <styles>
	        <style>
	            <name>Calendar</name>  
	            <getAppliesToFunction>
					<![CDATA[	      
return "#" + this.id;
	       			 ]]>	                
	            </getAppliesToFunction>
	        </style>
	        <style>
	            <name>Title</name>  
	            <getAppliesToFunction>
					<![CDATA[	      
return "#" + this.id + " .calendarLabel";
	       			 ]]>	                
	            </getAppliesToFunction>
	        </style>
	        <style>
	            <name>Month change</name>  
	            <getAppliesToFunction>
					<![CDATA[	      
return "#" + this.id + " .calendarMonthChange";
	       			 ]]>	                
	            </getAppliesToFunction>
	        </style>
	        <style>
	            <name>Year change</name>  
	            <getAppliesToFunction>
					<![CDATA[	      
return "#" + this.id + " .calendarYearChange";
	       			 ]]>	                
	            </getAppliesToFunction>
	        </style>
	        <style>
	            <name>Cells</name>  
	            <getAppliesToFunction>
					<![CDATA[	      
return "#" + this.id + " td";
	       			 ]]>	                
	            </getAppliesToFunction>
	        </style>
	        <style>
	            <name>Week days</name>  
	            <getAppliesToFunction>
					<![CDATA[	      
return "#" + this.id + " thead td";
	       			 ]]>	                
	            </getAppliesToFunction>
	        </style>
	        <style>
	            <name>Month days</name>  
	            <getAppliesToFunction>
					<![CDATA[	      
return "#" + this.id + " tbody td";
	       			 ]]>	                
	            </getAppliesToFunction>
	        </style>
	        <style>
	            <name>Today</name>  
	            <getAppliesToFunction>
					<![CDATA[	      
return "#" + this.id + " td.calendarToday";
	       			 ]]>	                
	            </getAppliesToFunction>
	        </style>	
	        <style>
	            <name>Selected day</name>  
	            <getAppliesToFunction>
					<![CDATA[	      
return "#" + this.id + " td.calendarSelectedDay";
	       			 ]]>	                
	            </getAppliesToFunction>
	        </style>	       
	    </styles>
	    
	    <initJavaScript>
	        <![CDATA[
var calendar = $("#" + id);
var date = new Date();
calendar.attr("data-year",date.getFullYear());
calendar.attr("data-month",date.getMonth());
if(details.selectToday)
	calendar.attr("data-date",date.getFullYear()+"-"+(date.getMonth()+1)+"-"+date.getDate());
calendarUpdate(id);  	        	  
	        ]]>
	    </initJavaScript>
	    
	</control>
</controls>